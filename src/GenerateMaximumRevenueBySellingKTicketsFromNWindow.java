import java.util.Comparator;
import java.util.PriorityQueue;

/**
 * Generate maximum revenue by selling K tickets from N windows.
 *
 * Given 'N' window where each window contains certain number of tickets.
 * Price of ticket is equal to number of tickets remaining at that window.
 *
 * Write an algorithm to sell k tickets from these windows in such a manner so that it
 * generates maximum revenue.
 *
 * Example:
 *
 * Say we have 6 windows
 * And they have 5, 1, 7, 9, 10, 11 tickets
 *
 * 1) Sell the first ticket from window 6 which has 11 tickets, so cost will be $11
 * 2) Sell second ticket from window 6 which has 10 tickets, so total cost is $21
 * 3) Sell third ticket from window 5 which has 10 tickets so total cost is $31
 * 4) Sell fourth ticket from window 5 which has 9 tickets so total cost is $40
 *
 * Approach:
 *
 * 1) Create maxHeap of size number of windows.
 * 2) Insert number of tickets at each window in heap.
 * 3) Extract element from max heap k times = number of tickets to be sold.
 * 4) Add these extracted elements to the revenue.
 * 5) It will generate maximumRevenue since extracting from heap will generate maximum revenue.
 * 6) Each time we extract from head, reduce by 1 and insert again in heap
 *
 */
public class GenerateMaximumRevenueBySellingKTicketsFromNWindow {

    private static int generateMaximumRevenueBySellingKTickets(int[] ticketsAtEachWindow, int numberOfTickets) {

        PriorityQueue<Integer> maxHeap = new PriorityQueue<Integer>(ticketsAtEachWindow.length,
                new Comparator<Integer>() {

            @Override
             public int compare(Integer o1, Integer o2) {
                return o2 - o1;
            }});

        int revenue = 0;

        //Insert all the tickets at each window in maxHeap
        for (int i = 0; i < ticketsAtEachWindow.length; i++) {
            maxHeap.offer(ticketsAtEachWindow[i]);
        }

        while(numberOfTickets > 0) {
            int ticketPrice = maxHeap.poll();
            revenue = revenue + ticketPrice;
            maxHeap.offer(--ticketPrice);
            numberOfTickets--;
        }

        return revenue;
    }

    public static void main(String[] args) {
        int[] ticketsAtEachWindow = { 5, 1, 7, 10, 11, 9 };
        int numberOfTickets = 5;

        System.out.println("Max revenue generated by selling " + numberOfTickets
                + " tickets: " + generateMaximumRevenueBySellingKTickets(ticketsAtEachWindow, numberOfTickets));
    }
}
